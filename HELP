neodba %s

Neodba is a simple, depedency-free CLI tool for interacting with databases.

USAGE: neodba [<OPTIONS>] [<SUB-COMMAND>] [<SUB-COMMAND ARGS>]

CONFIG:

Create a config file named neodba.edn to specify all your database connections.
This file must be in the current working directory when running neodba.
The first `:db-spec` with `:active` being truthy will be used.
For detailed documentation about the connection maps see:
https://cljdoc.org/d/com.github.seancorfield/next.jdbc/CURRENT/api/next.jdbc#get-datasource
The following is a Postgresql example.

  {:active-connection :prod
   :connections
   {:dev  {:dbtype "postgres"
           :host "localhost"
           :port 5432
           :dbname "postgres"
           :schema "public"
           :user "postgres"
           :password "postgres"}
    :prod {:merge-with :dev
           :host "127.0.0.1"
           :password "postgres"}}
   :print-config-info true
   :print-table-counts true
   ;; Can be nil/empty to not write SQL output to a file
   :write-to-file "sql-output.md"}

OPTIONS:

--log-level [FATAL|ERROR|WARN|SUCCESS|INFO|DEBUG|TRACE]
  Specify the log level
  The default value is INFO

--help, -h
  Show this help

--version
  Show current version

SUB-COMMANDS:

e, eval <SQL>
  Evaluates the following arguments as a SQL statement. In the example below the
  single quotes are used to avoid having to escape the asterisk as it's a
  special shell character:

  neodba e 'select * from some_table'

  There are a few helpers to retrieve database metadata such as the following:

  neodba e '(get-database-info)'
  neodba e '(get-catalogs)'
  neodba e '(get-schemas)'
  neodba e '(get-tables)'
  neodba e '(get-views)'
  neodba e '(get-columns some_table)'
  neodba e '(get-functions)'
  neodba e '(get-function-defn some_func)'
  neodba e '(get-procedures)'

f, file <PATH>
  Evaluate SQL in the given file, e.g.:

  neodba f some-file.sql

r, repl
  Starts a REPL where you can enter SQL statements. It is recommended to run
  Neodba with rlwrap to get proper readline support (history, arrow keys, etc.):

  rlwrap neodba r
